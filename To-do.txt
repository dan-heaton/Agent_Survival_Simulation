- Setup 'ReplicationAgent' class to inherit from 'AdvancedAgent' with more attributes (e.g. speed, energy_to_replicate) that is randomised upon creation
- Improve 'ReplicationAgent' 'seek_energy()' behaviour to take value of energy into account
- Improve 'ReplicationAgent' 'seek_energy()' with lookahead behaviour (i.e. to seek energies that require more than 1 move to reach)
- Add to 'ReplicationAgent' ability to replicate upon reaching a specific energy, along with how these are created and added to simulation
- Improve 'ReplicationAgent' 'replicate()' to use aspects of crossover/mutation
- Implement 'DynamicEnvironment', with random destructive events to environment (e.g. destroys certain agents/obstacles) + implement in simulation
- Write Python script to analyse .csv output files + produces metrics (e.g. avg energies consumed per move)